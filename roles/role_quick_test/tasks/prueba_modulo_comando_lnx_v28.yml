---
- name: Tareas por bloques - Validacion Instalacion Dimensions
  block:
    - name: Intentar ejecutar un comando
      ping:
      register: result_ping
      ignore_unreachable: true

    - name: Guardar nodos inalcanzables en un archivo
      lineinfile:
        path: /tmp/nodos_unreachable.txt
        line: "{{ inventory_hostname }}"
        create: yes
      when: result_ping.unreachable is defined and result_ping.unreachable > 0
      delegate_to: localhost

    - name: Registrar hosts inalcanzables
      set_fact:
        unrecheable: "{{ unrecheable + [(item | replace('.bvm.bluecare.kyndryl.net',''))+',,Unreachable playbook'] }}"
      loop: "{{ ansible_play_hosts_all | difference(ansible_play_hosts) }}"
      run_once: true
      delegate_to: localhost

    - name: Mostrar resultados finales
      debug:
        msg:
          - "hostname,ip,{{ puerto }}"
          - "{{ results }}"
          - "{{ unrecheable }}"
      run_once: true
      delegate_to: localhost
#    - name: Validar version Dimensions
#      become: true
#      shell: df -h | awk '{print $6}' | grep \w*dimensions
#      register: result_fsct
#
#    - set_fact:
#        fsname: "{{ result_fsct.stdout | default('')  }}"
#
#    - shell: |
#        {% if "fsname in result_fsct.stdout" %}
#        DMITLN="$(ls 2>/dev/null -1R /opt/dimensions | grep cm/prog:$ | tr ":" "/")"
#        DMBIN="$(ls -1 $DMITLN | grep dmstartup)"
#        DMVER=$(ls 2>/dev/null -1R /opt/dimensions | grep cm/prog:$ | tr ":" "/" | cut -d'/' -f4)
#        echo "$DMBIN,$DMVER"
#        {% endif %}
#      become: true
#      register: result_binver
#      when: fsname | length > 0
#
#    - set_fact:
#        binario: "{{ result_binver.stdout.split(',')[0] | default('')  }}"
#        version: "{{ result_binver.stdout.split(',')[1] | default('')  }}"
#
#    - shell: |
#        {% if binario == "dmstartup" %}
#        echo "{{ inventory_hostname.split('.')[0] }},{{ hostvars[inventory_hostname].ipaddress }},Dimension {{ version }}"
#        {% else %}
#        echo "{{ inventory_hostname.split('.')[0] }},{{ hostvars[inventory_hostname].ipaddress }},Dimension no instalado"
#        {% endif %}
#      register: result_end
#  ignore_unreachable: true
##  failed_when: false
#
#- name: Tareas por bloques - Resultado y despliegue de repote Dimensions
#  block:
#    - name: Show Report unreachable
#      debug: 
#        msg: "{{ result_end.stdout }}"
#  ignore_unreachable: true
#
#- name: Tareas por bloques - Resultado y despliegue de repote Dimensions
#  block:
#    - name: Show Report
#      debug: 
#        msg: "{{ ansible_play_hosts | map('extract', hostvars, 'result_end') | map(attribute='stdout') | list }}"
#      run_once: true
#
##    - name: Show Report
##      debug: 
##        msg: "{{ ansible_play_hosts | map('extract', hostvars, 'result_end') | map(attribute='stdout') | list }}"
##      run_once: true
#
#    - name: Guardar nodos inalcanzables en un archivo
#      debug:
#        msg: "{{ inventory_hostname }}"
#      when: result_binver.unreachable is defined and result_binver.unreachable > 0